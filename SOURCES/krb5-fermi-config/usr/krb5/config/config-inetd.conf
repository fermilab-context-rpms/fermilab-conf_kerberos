#!/bin/sh
#
# This script will make sure that the /etc/inetd.conf
# file has the correct entries
#
#
# History:
# 08Apr2001	dawson	First wrote the script.  It first checks 
#		too see if tcp wrappers is on, by checking /usr/sbin/tcpd.
#		We check for that file because that is the place where our
#		wrapper template has it.  If we still had wrappers, but in
#		a different place, our script might mess something up. 
#		We then go through turning off services, or kerberizing services
#		as the case may be.
#
#
#######################################################################
# Variables
KRB5CONF_DIR="/usr/krb5/config"
KRB5CONF_TARGET_FILE="/etc/inetd.conf"
if [ -f /usr/sbin/tcpd ] ; then
	KRB5CONF_SOURCE_FILE="$KRB5CONF_DIR/inetd.conf.wrapped.template"
else
	KRB5CONF_SOURCE_FILE="$KRB5CONF_DIR/inetd.conf.template"
fi

nodename=`uname -n`
datestamp=`date +%d%b%EY`
version="$1"
logfile=${KRB5CONF_DIR}/${nodename}.log
additem="no"

########################################################################
# Backup the file, incase the user want's it
backupfile() {
	if [ -f $KRB5CONF_TARGET_FILE.$datestamp ] ; then
		echo "$KRB5CONF_TARGET_FILE.$datestamp already exists, backup not made"
	else
		echo "Saving original service file as $KRB5CONF_TARGET_FILE.$datestamp"
		cp $KRB5CONF_TARGET_FILE $KRB5CONF_TARGET_FILE.$datestamp
	fi
}
########################################################################
# Add starting line to original file
addstart () {
	backupfile
	echo "## ADDED by krb5-fermi-config ${version} ${datestamp}" >> $KRB5CONF_TARGET_FILE
}
########################################################################
# Add ending line to services file
addend () {
	echo "## END of krb5-fermi-config ${version} additions ${datestamp}" >> $KRB5CONF_TARGET_FILE
}

########################################################################
# Comment out services from the file
findservice () {
	service="$1"
	cat $KRB5CONF_TARGET_FILE | {
		while read line
		do
			# Only worry about uncommented lines.
			testchar=`echo $line |cut -c1`
			if [ "$testchar" != "#" ] ; then
				#get the first word of the line, which is the service name
				testword=`echo $line |cut -d' ' -f1`
				# Check that word to see if it's what we want
				if [ "$testword" = "$service" ] ; then
					return 0
				fi
			fi
		done
		return 1
	}
	return $?
}

########################################################################
# Comment out services from the file
commentout () {
	service="$1"
	TEMPFILE="/tmp/config-inetd.temp.comment"
	rm -f $TEMPFILE
	cat $KRB5CONF_TARGET_FILE | {
		while read line
		do
			# Only worry about uncommented lines.
			testchar=`echo $line |cut -c1`
			if [ "$testchar" != "#" ] ; then
				#get the first word of the line, which is the service name
				testword=`echo $line |cut -d' ' -f1`
				# Check that word to see if it's what we want
				if [ "$testword" = "$service" ] ; then
					echo "#$line" >> $TEMPFILE					
				else
					echo "$line" >> $TEMPFILE
				fi
			else
				echo "$line" >> $TEMPFILE
			fi
		done
	}
	mv -f $TEMPFILE $KRB5CONF_TARGET_FILE

}

########################################################################
# Comment out services from the file
equalout () {
	original_service="$1"
	kerberos_service="$2"
	TEMPFILE="/tmp/config-inetd.temp.equal"
	rm -f $TEMPFILE
	cat $KRB5CONF_TARGET_FILE | {
		while read line
		do
			# Get the first word, commented or not.
			testword=`echo $line |cut -d' ' -f1`
			# See if it's the right service and if it's turned on
			if [ "$testword" = "$original_service" ] ; then
				echo "##$line" >> $TEMPFILE					
				echo "$kerberos_service EQUALS $line" >> $TEMPFILE					
			elif [ "$testword" = "#$original_service" ] ; then
				echo "##$line" >> $TEMPFILE					
				echo "#$kerberos_service EQUALS $line" >> $TEMPFILE					
			else
				echo "$line" >> $TEMPFILE
			fi
		done
	}
	mv -f $TEMPFILE $KRB5CONF_TARGET_FILE

}

########################################################################
#  MAIN PROGRAM
#First go through the file and see if we should convert any services
#
# Go through the template file, line by line
cat $KRB5CONF_SOURCE_FILE | {
	while read line
	do
		# See if the line is commented or not
		testchar=`echo $line |cut -c1`
		if [ "$testchar" != "#" ] ; then
			# check to see if our line is already in the file.  It could be
			#  if this has already been run.
			if ! grep "${line}" ${KRB5CONF_TARGET_FILE} >/dev/null 2>&1; then
				# Either way, we will put something in the file
				#  so add the header
				if [ "$additem" != "yes" ] ; then
					addstart
					additem="yes"
				fi

				# Check to see if the service is even in the file yet 
				#  this is needed for those new kerberose services
				# Get the first word of the line, which is the service name
				testword=`echo $line |cut -d' ' -f1`
				if grep "${testword}" ${KRB5CONF_TARGET_FILE} >/dev/null 2>&1; then		
					
					findservice ${testword}
					if [ $? -eq 0 ] ; then		
						# This service is still being used.  We will comment out their
						#  original line, and add ours.
						commentout $testword
						echo "${line}" >> ${KRB5CONF_TARGET_FILE}
					else
						# They had this service commented out for some reason
						#  we will respect their wishes and comment out our
						#  service, but still put it in, so they can simply uncomment
						#  it out to use it.
						echo "#${line}" >> ${KRB5CONF_TARGET_FILE}
					fi
				else
					# The service isn't in the file, so put it there
					echo "${line}" >> ${KRB5CONF_TARGET_FILE}
				fi
			fi
		else
			testextra=`echo $line |cut -d':' -f1`
			# The line is one that is commented out, but we will check to see if
			#  is something that is supposed to be disabled.
			if [ "$testextra" = "# DISABLE" ] ; then
				#It is a disabled line, get the service and disable it
				service=`echo $line | cut -d' ' -f3`
				commentout ${service}
			fi
			# The line is one that is commented out, but we will check to see if
			#  is something that is equal to another service.
			if [ "$testextra" = "# EQUAL" ] ; then
				#It is a disabled line, get the service and disable it
				original_service=`echo $line | cut -d' ' -f3`
				kerberized_service=`echo $line | cut -d' ' -f4`
				equalout ${original_service} ${kerberized_service}
			fi
		fi
	done
	if [ "$additem" = "yes" ] ; then
		echo "The ${KRB5CONF_TARGET_FILE} file has been edited"
		addend
	else
		echo "The ${KRB5CONF_TARGET_FILE} file had no need to be changed"	
	fi
}
